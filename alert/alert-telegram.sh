#!bin/bash
source ./config.sh

dbname=$DB_NAME
hostname=$(hostname)
myip=$(hostname -I | awk '{print $1}')
host_ip=$myip
hostname_server=$hostname
os_systems=$(cat /etc/*release | awk -F"=" '/PRETTY_NAME/ {print $2}')


ERROR="
üö®[BACKUP-ERROR]üö®
Server: ${hostname_server}
Database: ${dbname}
ƒê·ªãa ch·ªâ IP : ${host_ip} / 24
N·ªôi dung: Backup d·ªØ li·ªáu kh√¥ng th√†nh c√¥ng !
--------
Nguy√™n nh√¢n: Backup DB b·ªã ng·∫Øt gi·ªØa ch·ª´ng, nguy√™n nh√¢n do l·ªói databases ho·∫∑c k·∫øt n·ªëi b·ªã ng·∫Øt, vui l√≤ng ki·ªÉm tra l·∫°i
"

SUCCESS="
‚úÖ[BACKUP-SUCCESS]‚úÖ
Server: ${hostname_server}
Database: ${dbname}
ƒê·ªãa ch·ªâ IP : ${host_ip} / 24
N·ªôi dung: Backup Dump th√†nh c√¥ng databases !
"


alertTelegramSuccess(){
curl -s -X POST $URL \
-G -d chat_id=$CHAT_ID \
--data-urlencode "text=$SUCCESS" \
-d "parse_mode=HTML"
}

alertTelegramError(){
curl -s -X POST $URL \
-G -d chat_id=$CHAT_ID \
--data-urlencode "text=$ERROR" \
-d "parse_mode=HTML"
}



sendServer(){
echo $os_systems

capacityFile=$(du -sh dkth_produce_$DATE.dump | awk '{print $1}')

curl -X POST http://10.0.0.210:5000/api/databases/info \
-H "Content-Type: application/json" \
-d '{"ipServer": "'"$host_ip"'",
    "hostname": "'"$hostname_server"'",
    "osSystems": "Ubuntu Test",
    "nameDatabase": "'"$DB_NAME"'",
    "pathBackup": "/root/pg_backup",
    "status": "backup",
    "capacityFile": "'"$capacityFile"'"
    }'
}


